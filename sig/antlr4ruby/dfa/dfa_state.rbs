module Antlr4ruby

  class DFAState
    BASIC: Integer
    BLOCK_END: Integer
    BLOCK_START: Integer
    INITIAL_NUM_TRANSITIONS: Integer
    INVALID_TYPE: Integer
    LOOP_END: Integer
    PLUS_BLOCK_START: Integer
    PLUS_LOOP_BACK: Integer
    RULE_START: Integer
    RULE_STOP: Integer
    STAR_BLOCK_START: Integer
    STAR_LOOP_BACK: Integer
    STAR_LOOP_ENTRY: Integer
    TOKEN_START: Integer

    @state_number: Integer
    @configs: ATNConfigSet
    @edges: Array[DFAState]
    @is_accept_state: bool
    @prediction: Integer
    @lexer_action_executor: LexerActionExecutor
    @requires_full_context: bool

    class PredPrediction
      @pred: SemanticContext
      @alt: Integer

      attr_accessor alt: Integer
      attr_accessor pred: SemanticContext

      def initialize: (SemanticContext, Integer) -> void
    end


    attr_accessor configs: ATNConfigSet
    attr_accessor edges: Array[DFAState]
    attr_accessor is_accept_state: bool
    attr_accessor lexer_action_executor: LexerActionExecutor
    attr_accessor predicates: Array[PredPrediction]?
    attr_accessor prediction: Integer
    attr_accessor requires_full_context: bool
    attr_accessor state_number: Integer

    def initialize: (configs: ATNConfigSet?, state_number: Integer) -> void

    def get_alt_set: -> Set[Integer]

  end
end
