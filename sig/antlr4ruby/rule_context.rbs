
module Antlr4ruby
  class RuleContext
    include _RuleNode
    @parent: RuleContext?
    @invoking_state: Integer

    attr_accessor invoking_state: Integer
    attr_accessor parent: RuleContext

    def initialize: (RuleContext?, Integer) -> void

    def depth: -> Integer

    def enter_rule: (_ParseTreeListener) -> void

    def exit_rule: (_ParseTreeListener) -> void

    def get_alt_number: -> Integer

    def get_rule_index: -> Integer

    def is_empty?: -> bool

    def set_alt_number: (Integer) -> void

    def to_s: (recognizer: Recognizer[untyped, untyped]?, rule_names: Array[String], stop: RuleContext?) -> String

    # def get_rule_context: (Class, Integer?) -> RuleContext?
  end
end